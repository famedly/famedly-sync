# Configuration for Famedly's Zitadel - has to be provided by Famedly
zitadel:
  # The Famedly user endpoint to sync to.
  url: https://auth.famedly.de
  # The Famedly-provided service user credentials.
  key_file: /opt/famedly-sync/service-user.json
  # The organization whose users to sync.
  organization_id: 278274756195721220
  # The project to grant users access to.
  project_id: 278274945274880004
  # The identity provider ID to enable SSO login for (only required when sso_login feature flag is enabled)
  #
  # WARNING: This user *must* be scoped to the specific org/project,
  # as famedly-sync does not limit syncs to the configured org/project
  # by itself.
  # idp_id: 000000000000000000

feature_flags:
  - verify_email      # Whether to ask users to verify their email addresses post sync
  - verify_phone      # Whether to ask users to verify their phone numbers post sync
  # - sso_login       # Whether to enable SSO login - Please note that his has some drawbacks and limitations, see the help center article for more information
  # - dry_run         # Disable syncing users to Zitadel - Intended to ensure syncs are working before productive deployment
  # - deactivate_only # Only deactivate users, do not create or update them.

# Configuration for the sources to sync from.
sources:
  # Configuration for the UKT source - a custom endpoint provided by UKT,
  # which gives a list of emails of users that should be deleted from Zitadel.
  ukt:
    # Endpoint URL to fetch the list of users from.
    endpoint_url: https://list.example.invalid/usersync4chat/maillist
    # OAuth2 URL to fetch the token from.
    oauth2_url: https://list.example.invalid/token
    # Client ID
    client_id: mock_client_id
    # Client Secret
    client_secret: mock_client_secret
    # Scope of what to fetch
    scope: "openid read-maillist"
    # Grant type
    grant_type: client_credentials
