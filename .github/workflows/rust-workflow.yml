name: Rust workflow

# Trigger the CI on any tags, pushes to any branch and PRs to any branch.
on:
  push:
    branches: [ "main" ]
    tags: [ "*" ]
  pull_request:
    branches: [ "*" ]

env:
  CARGO_TERM_COLOR: always
  ADDITIONAL_PACKAGES: ""

# Make sure there is no pipeline running uselessly.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Defined CI jobs.
jobs:
  simple-checks:
    container: ghcr.io/famedly/rust-container:nightly
    runs-on: ubuntu-latest-16core
    steps:
    - name: Checkout current repository
      uses: actions/checkout@v3
      with:
        path: head

    - uses: famedly/backend-build-workflows/.github/actions/rust-prepare@main
      with:
        gitlab_ssh: ${{ secrets.CI_SSH_PRIVATE_KEY}}
        gitlab_user: ${{ secrets.GITLAB_USER }}
        gitlab_pass: ${{ secrets.GITLAB_PASS }}

    - name: Caching
      uses: Swatinem/rust-cache@b8a6852b4f997182bdea832df3f9e153038b5191
      with:
        workspaces: "head -> target"

    - name: Rustfmt
      shell: bash
      working-directory: head
      run: cargo +${NIGHTLY_VERSION} fmt -- --check

    - name: Clippy
      working-directory: head
      shell: bash
      run: cargo +${NIGHTLY_VERSION} clippy --workspace --all-targets -- -D warnings

    - name: Doc-test
      shell: bash
      working-directory: head
      run: cargo +${NIGHTLY_VERSION} test --doc --workspace --verbose

    - name: Udeps
      shell: bash
      working-directory: head
      run: cargo +${NIGHTLY_VERSION} udeps

    - name: Typos
      shell: bash
      working-directory: head
      run: typos --exclude '*.key' --exclude '*.crt' --exclude '*.csr' --exclude '*.srl'

  tests:
    runs-on: ubuntu-latest-16core
    steps:
    - name: Checkout current repository
      uses: actions/checkout@v3
      with:
        path: head

    - uses: famedly/backend-build-workflows/.github/actions/rust-prepare@main
      with:
        gitlab_ssh: ${{ secrets.CI_SSH_PRIVATE_KEY}}
        gitlab_user: ${{ secrets.GITLAB_USER }}
        gitlab_pass: ${{ secrets.GITLAB_PASS }}

    - name: Install additional cargo tooling
      shell: bash
      run: cargo install cargo-nextest --locked

    - name: Caching
      uses: Swatinem/rust-cache@b8a6852b4f997182bdea832df3f9e153038b5191
      with:
        workspaces: "head -> target"

    - name: Test
      timeout-minutes: 20
      shell: bash
      working-directory: head
      run: cargo nextest run --no-fail-fast --workspace

    - name: Get docker logs on failure
      shell: bash
      if: failure()
      working-directory: base
      run: |
        docker compose --project-directory ./tests/environment logs
